SUB DEFINIT
    REM &H69 WHEN AD0 SET HIGH
    MPU_ADDRESS       = &H68

    REM REGISTER ADDRESSES
    ACCEL_XOFFS_H     = &H06
    ACCEL_XOFFS_L     = &H07
    ACCEL_YOFFS_H     = &H08
    ACCEL_YOFFS_L     = &H09
    ACCEL_ZOFFS_H     = &H0A
    ACCEL_ZOFFS_L     = &H0B
    GYRO_XOFFS_H      = &H13
    GYRO_XOFFS_L      = &H14
    GYRO_YOFFS_H      = &H15
    GYRO_YOFFS_L      = &H16
    GYRO_ZOFFS_H      = &H17
    GYRO_ZOFFS_L      = &H18
    CONFIG            = &H1A
    REM GYROSCOPE CONFIGURATION
    GYRO_CONFIG       = &H1B 
    REM ACCELEROMETER CONFIGURATION
    ACCEL_CONFIG      = &H1C 
    FF_THRESHOLD      = &H1D
    FF_DURATION       = &H1E
    MOT_THRESHOLD     = &H1F
    MOT_DURATION      = &H20
    ZMOT_THRESHOLD    = &H21
    ZMOT_DURATION     = &H22
    REM INT PIN BYPASS ENABLE CONFIG
    INT_PIN_CFG       = &H37
    REM INT ENABLE
    INT_ENABLE        = &H38
    INT_STATUS        = &H3A
    ACCEL_XOUT_H      = &H3B
    ACCEL_XOUT_L      = &H3C
    ACCEL_YOUT_H      = &H3D
    ACCEL_YOUT_L      = &H3E
    ACCEL_ZOUT_H      = &H3F
    ACCEL_ZOUT_L      = &H40
    TEMP_OUT_H        = &H41
    TEMP_OUT_L        = &H42
    GYRO_XOUT_H       = &H43
    GYRO_XOUT_L       = &H44
    GYRO_YOUT_H       = &H45
    GYRO_YOUT_L       = &H46
    GYRO_ZOUT_H       = &H47
    GYRO_ZOUT_L       = &H48
    MOT_DETECT_STATUS = &H61
    MOT_DETECT_CTRL   = &H69
    REM USER CONTROL
    USER_CTRL         = &H6A
    REM POWER MANAGEMENT 1
    PWR_MGMT_1        = &H6B
    REM WHO AM I
    WHO_AM_I          = &H75

    VECTOR_XAXIS = 0
    VECTOR_YAXIS = 0
    VECTOR_ZAXIS = 0

    OVERFLOW   = 0
    FREEFALL   = 0
    INACTIVE   = 0
    ACTIVE     = 0
    XACTIVEPOS = 0
    XACTIVENEG = 0
    YACTIVEPOS = 0
    YACTIVENEG = 0
    ZACTIVEPOS = 0
    ZACTIVENEG = 0

    CLOCK_KEEP_RESET = &B111
    CLOCK_EXT_19MHZ  = &B101
    CLOCK_EXT_32KHZ  = &B100
    CLOCK_PLL_ZGYRO  = &B011
    CLOCK_PLL_YGYRO  = &B010
    CLOCK_PLL_XGYRO  = &B001
    CLOCK_INT_8MHZ   = &B000

    SCALE_2000DPS    = &B011
    SCALE_1000DPS    = &B010
    SCALE_500DPS     = &B001
    SCALE_250DPS     = &B000

    RANGE_16G        = &B011
    RANGE_8G         = &B010
    RANGE_4G         = &B001
    RANGE_2G         = &B000

    DELAY_3MS        = &B011
    DELAY_2MS        = &B010
    DELAY_1MS        = &B001
    DELAY_0MS        = &B000
    DHPF_HOLD        = &B111
    DHPF_0_63HZ      = &B100
    DHPF_1_25HZ      = &B011
    DHPF_2_5HZ       = &B010
    DHPF_5HZ         = &B001
    DHPF_RESET       = &B000

    DLPF_6           = &B110
    DLPF_5           = &B101
    DLPF_4           = &B100
    DLPF_3           = &B011
    DLPF_2           = &B010
    DLPF_1           = &B001
    DLPF_0           = &B000
END SUB

SUB WRITEREG(REGISTER,WRITEDATA)
    I2C WRITE MPU_ADDRESS,0,2,REGISTER,WRITEDATA
END SUB

FUNCTION READREG(REGISTER)
    I2C WRITE MPU_ADDRESS,1,1,REGISTER
    I2C READ MPU_ADDRESS,0,1,READREG
END FUNCTION

FUNCTION READBIT(REGISTER,OFFSET)
    VALUE = READREG(REGISTER)
    READBIT = FIX(VALUE/(2^OFFSET)) AND 1
END FUNCTION

SUB WRITEBIT(REGISTER,OFFSET,STATE)
    VALUE = READREG(REGISTER)
    IF STATE = 0 THEN
        MASK = 255-(1*(2^OFFSET))
        VALUE = VALUE AND MASK
    ELSE
        VALUE = VALUE OR (1*(2^OFFSET))
    ENDIF
    WRITEREG(REGISTER,VALUE)
END SUB

SUB SETSCALE(SCALE)
    IF SCALE = SCALE_250DPS THEN
        DPSPERDIGIT = 0.007633
    ELSEIF SCALE = SCALE_500DPS THEN
        DPSPERDIGIT = 0.015267
    ELSEIF SCALE = SCALE_1000DPS THEN
        DPSPERDIGIT = 0.30487
    ELSEIF SCALE = SCALE_2000DPS THEN
        DPSPERDIGIT = 0.60975
    ELSE
        DPSPERDIGIT = 0.0
    ENDIF
    VALUE = READREG(GYRO_CONFIG)
    VALUE = VALUE AND &B11100111
    VALUE = VALUE OR (SCALE * (2^3))
    WRITEREG(GYRO_CONFIG,VALUE)
END SUB

FUNCTION GETSCALE
    GETSCALE = READREG(GYRO_CONFIG)
    GETSCALE = GETSCALE AND &B00011000
    GETSCALE = FIX(GETSCALE / (2^3))
END FUNCTION

SUB SETRANGE(RANGE)
    IF RANGE = RANGE_2G THEN
        RANGEPERDIGIT = 0.000061
    ELSEIF RANGE = RANGE_4G THEN
        RANGEPERDIGIT = 0.000122
    ELSEIF RANGE = RANGE_8G THEN
        RANGEPERDIGIT = 0.000244
    ELSEIF RANGE = RANGE_16G THEN
        RANGEPERDIGIT = 0.0004882
    ELSE
        RANGEPERDIGIT = 0.0
    ENDIF
    VALUE = READREG(ACCEL_CONFIG)
    VALUE = VALUE AND &B11100111
    VALUE = VALUE OR (RANGE * (2^3))
    WRITEREG(ACCEL_CONFIG,VALUE)
END SUB

FUNCTION GETRANGE
    GETRANGE = READREG(ACCEL_CONFIG)
    GETRANGE = GETRANGE AND &B00011000
    GETRANGE = FIX(GETRANGE/(2^3))
END FUNCTION

SUB SETDHPFMODE(DHPF)
    VALUE = READREG(ACCEL_CONFIG)
    VALUE = VALUE AND &B11111000
    VALUE = VALUE OR DHPF
    WRITEREG(ACCEL_CONFIG,VALUE)
END SUB

SUB SETDLPFMODE(DLPF)
    VALUE = READREG(CONFIG)
    VALUE = VALUE AND &B11111000
    VALUE = VALUE OR DLPF
    WRITEREG(CONFIG,VALUE)
END SUB

SUB SETCLOCKSOURCE(SOURCE)
    VALUE = READREG(PWR_MGMT_1)
    VALUE = VALUE AND &B11111000
    VALUE = VALUE OR SOURCE
    WRITEREG(PWR_MGMT_1,VALUE)
END SUB

FUNCTION GETCLOCKSOURCE
    GETCLOCKSOURCE = READREG(PWR_MGMT_1)
    GETCLOCKSOURCE = GETCLOCKSOURCE AND &B00000111
END FUNCTION

FUNCTION GETSLEEPENABLED
    GETSLEEPENABLED = READBIT(PWR_MGMT_1,6)
END FUNCTION

SUB SETSLEEPENABLED(STATE)
    WRITEBIT(PWR_MGMT_1,6,STATE)
END SUB

SUB MPU6050INIT
    DEFINIT
    I2C OPEN 32,1000
    DG_XAXIS = 0
    DG_YAXIS = 0
    DG_ZAXIS = 0
    USECALIBRATE = 0
    TG_XAXIS = 0
    TG_YAXIS = 0
    TG_ZAXIS = 0
    ACTUALTHRESHOLD = 0
END SUB