SUB HASHINIT
    REM PRIME SQUARE ROOT FRACTIONAL PARTS
    DATA &H6a09,&He667,&Hbb67,&Hae85,&H3c6e,&Hf372,&Ha54f,&Hf53a
    DATA &H510e,&H527f,&H9b05,&H688c,&H1f83,&Hd9ab,&H5be0,&Hcd19
    REM PRIME CUBE ROOT FRACTIONAL PARTS
    DATA &H428a,&H2f98,&H7137,&H4491,&Hb5c0,&Hfbcf,&He9b5,&Hdba5
    DATA &H3956,&Hc25b,&H59f1,&H11f1,&H923f,&H82a4,&Hab1c,&H5ed5
    DATA &Hd807,&Haa98,&H1283,&H5b01,&H2431,&H85be,&H550c,&H7dc3
    DATA &H72be,&H5d74,&H80de,&Hb1fe,&H9bdc,&H06a7,&Hc19b,&Hf174
    DATA &He49b,&H69c1,&Hefbe,&H4786,&H0fc1,&H9dc6,&H240c,&Ha1cc
    DATA &H2de9,&H2c6f,&H4a74,&H84aa,&H5cb0,&Ha9dc,&H76f9,&H88da
    DATA &H983e,&H5152,&Ha831,&Hc66d,&Hb003,&H27c8,&Hbf59,&H7fc7
    DATA &Hc6e0,&H0bf3,&Hd5a7,&H9147,&H06ca,&H6351,&H1429,&H2967
    DATA &H27b7,&H0a85,&H2e1b,&H2138,&H4d2c,&H6dfc,&H5338,&H0d13
    DATA &H650a,&H7354,&H766a,&H0abb,&H81c2,&Hc92e,&H9272,&H2c85
    DATA &Ha2bf,&He8a1,&Ha81a,&H664b,&Hc24b,&H8b70,&Hc76c,&H51a3
    DATA &Hd192,&He819,&Hd699,&H0624,&Hf40e,&H3585,&H106a,&Ha070
    DATA &H19a4,&Hc116,&H1e37,&H6c08,&H2748,&H774c,&H34b0,&Hbcb5
    DATA &H391c,&H0cb3,&H4ed8,&Haa4a,&H5b9c,&Hca4f,&H682e,&H6ff3
    DATA &H748f,&H82ee,&H78a5,&H636f,&H84c8,&H7814,&H8cc7,&H0208
    DATA &H90be,&Hfffa,&Ha450,&H6ceb,&Hbef9,&Ha3f7,&Hc671,&H78f2
    DIM h$(8) LENGTH 4
    DIM k$(64) LENGTH 4
    RESTORE
    FOR j = 0 TO 7
        h$(j) = LOADWORD$()
    NEXT
    FOR j = 0 TO 63
        k$(j) = LOADWORD$()
    NEXT
END SUB

FUNCTION FLOAT(LONG)
    FLOAT = 0
    FOR i = 0 TO 3
        BYTE = PEEK(VAR LONG,i)
        FLOAT = FLOAT + (BYTE*(&H100^(3-i)))
    NEXT
END FUNCTION

FUNCTION LONG(FLOAT)
    LONG = 0
    BYTE2 = 0
    FOR i = 0 TO 3
        BYTE2 = FIX(FLOAT/(&H100^(3-i))) AND &HFF
        POKE VAR LONG,i,(BYTE2)
    NEXT
END FUNCTION

FUNCTION LONG64$(INTEGER2)
    HIWORD = LONG(FIX(INTEGER2/(&H100^3)))
    LOWORD = LONG(INTEGER2 AND &HFFFFFFFF)
    LONG64$ = TYPECAST$(HIWORD)+TYPECAST$(LOWORD)
END FUNCTION

FUNCTION TYPECAST(BYTES$)
    FOR J = 0 TO 3
        POKE VAR TYPECAST,J,PEEK(VAR BYTES$,J+1)
    NEXT
END FUNCTION

FUNCTION TYPELONG(BYTES2$)
    TYPELONG = 0
    FOR k = 0 TO 3
        TYPELONG = TYPELONG * &H100
        BYTE2 = PEEK(VAR BYTES2$,k+1)
        TYPELONG = TYPELONG + BYTE2
    NEXT
END FUNCTION

FUNCTION TYPECAST$(INTEGER)
    TYPECAST$ = "    "
    FOR J = 0 TO 3
        POKE VAR TYPECAST$,J+1,PEEK(VAR INTEGER,J)
    NEXT
END FUNCTION

FUNCTION TYPELONG$(INTEGER)
    TYPELONG$ = "    "
    FOR J = 0 TO 3
        POKE VAR TYPELONG$,J,(INTEGER/2^(3-J)) AND &HFF
    NEXT
END SUB

FUNCTION LOADWORD$
    LOADWORD$ = "    "
    BYTES = 0
    READ BYTES
    POKE VAR LOADWORD$,1,FIX(BYTES/&H100) AND &HFF)
    POKE VAR LOADWORD$,2,BYTES AND &HFF)
    READ BYTES
    POKE VAR LOADWORD$,3,FIX(BYTES/&H100) AND &HFF)
    POKE VAR LOADWORD$,4,BYTES AND &HFF)
END FUNCTION

FUNCTION PADDING$(MSGINPUT$)
    L = LOF(#3)
    K = 64-(L MOD(64))-8
    PADDING$ = MSGINPUT$ + STRING$(K,CHR$(0))+LONG64$(L)
    POKE VAR PADDING$,L+1,128
END FUNCTION

FUNCTION LONGROTATE$(WORDINPUT$,BITS)
    LONGROTATE$ = "    "
    SHIFTBITS = BITS MOD(8)
    SHIFTBYTES = FIX(BITS/8)
    MASK = (2^(SHIFTBITS))-1
    FOR i = 0 TO 3
        READVALUE = PEEK(VAR WORDINPUT$,((i+4-SHIFTBYTES) MOD(4))+1)
        CARRY = PEEK(VAR WORDINPUT$,((i+4-SHIFTBYTES-1) MOD(4))+1) AND MASK
        READVALUE = FIX(READVALUE/(2^SHIFTBITS))+(CARRY*(2^SHIFTBITS))
        POKE VAR LONGROTATE$,i+1,READVALUE
    NEXT
END FUNCTION

FUNCTION LONGSHIFT$(WORDINPUT2$,BITS)
    WORDLENGTH = 32
    LONGSHIFT$ = "    "
    SHIFTBITS = BITS MOD(8)
    SHIFTBYTES = FIX(BITS/8)
    MASK = (2^(SHIFTBITS))-1
    FOR i = 3 TO 0 STEP -1
        IF i - SHIFTBYTES => 0 THEN
            READVALUE = PEEK(VAR WORDINPUT2$,((i+4-SHIFTBYTES) MOD(4))+1)
        ELSE
            READVALUE = 0
        ENDIF
        IF i - SHIFTBYTES => 1 THEN
            CARRY = PEEK(VAR WORDINPUT2$,((i+4-SHIFTBYTES-1) MOD(4))+1) AND MASK
        ELSE
            CARRY = 0
        ENDIF
        READVALUE = FIX(READVALUE/(2^SHIFTBITS))+(CARRY*(2^SHIFTBITS))
        POKE VAR LONGSHIFT$,i+1,READVALUE
    NEXT
END FUNCTION

FUNCTION LONGXOR$(WORD1$,WORD2$)
    LONGXOR$ = "    "
    FOR j = 1 TO 4
        POKE VAR LONGXOR$,j,(PEEK(VAR WORD1$,j) XOR PEEK(VAR WORD2$,j))
    NEXT
END FUNCTION

FUNCTION LONGAND$(WORD3$,WORD4$)
    LONGAND$ = "    "
    FOR i = 1 TO 4
        POKE VAR LONGAND$,i,(PEEK(VAR WORD3$,i) AND PEEK(VAR WORD4$,i))
    NEXT
END FUNCTION

FUNCTION LONGNOT$(WORD5$)
    LONGNOT$ = "    "
    FOR i = 1 TO 4
        POKE VAR LONGNOT$,i,255-PEEK(VAR WORD5$,i)
    NEXT
END FUNCTION

FUNCTION LONGADD$(WORD6$,WORD7$)
    LONGADD$ = "    "
    CARRY = 0
    FOR i = 4 TO 1 STEP -1
        VAL = (PEEK(VAR WORD6$,i)+PEEK(VAR WORD7$,i)+CARRY)
            POKE VAR LONGADD$,i,VAL MOD(256)
            CARRY = FIX(VAL/(2^8))
        ENDIF
    NEXT
END FUNCTION

FUNCTION HEXLONG$(WORD8$)
    HEXLONG$ = ""
    FOR i = 1 TO 4
        HEXLONG$ = HEXLONG$ + HEX$(PEEK(VAR WORD8$,i))
    NEXT
END FUNCTION

FUNCTION HASHPROCESS$(MSGINPUT2$)
    DIM w$(64) LENGTH 4
    FOR x = 0 TO 15
        w$(x) = MID$(MSGINPUT2$,(4*x)+1,4)
    NEXT
    FOR x = 16 TO 63
        s0$ = LONGXOR$(LONGROTATE$(w$(x-15),7),LONGROTATE$(w$(x-15),18))
        s0$ = LONGXOR$(s0$,LONGSHIFT$(w$(x-15),3))
        s1$ = LONGXOR$(LONGROTATE$(w$(x-2),17),LONGROTATE$(w$(x-2),19))
        s1$ = LONGXOR$(s1$,LONGSHIFT$(w$(x-2),10))
        w$(x) = LONGADD$(w$(x-16),s0$)
        w$(x) = LONGADD$(w$(x),w$(x-7))
        w$(x) = LONGADD$(w$(x),s1$)
        IF x = 16 THEN
            PRINT HEXLONG$(w$(x-15))
            PRINT HEXLONG$(LONGROTATE$(w$(x-15),18))
            PRINT HEXLONG$(s0$)
            PRINT HEXLONG$(s1$)
        ENDIF
    NEXT
    a$ = h$(0)
    b$ = h$(1)
    c$ = h$(2)
    d$ = h$(3)
    e$ = h$(4)
    f$ = h$(5)
    g$ = h$(6)
    h$ = h$(7)
    FOR x = 0 TO 63
        s1$ = LONGXOR$(LONGROTATE$(e$,6),LONGROTATE$(e$,11))
        s1$ = LONGXOR$(s1$,LONGROTATE$(e$,25))
        ch1$ = LONGAND$(e$,f$)
        ch2$ = LONGAND$(LONGNOT$(e$),g$)
        ch$ = LONGXOR$(ch1$,ch2$)
        temp1$ = LONGADD$(h$,s1$)
        temp1$ = LONGADD$(temp1$,ch$)
        temp1$ = LONGADD$(temp1$,k$(x))
        temp1$ = LONGADD$(temp1$,w$(x))
        s0$ = LONGXOR$(LONGROTATE$(a$,2),LONGROTATE$(a$,13))
        s0$ = LONGXOR$(s0$,LONGROTATE$(a$,22))
        maj$ = LONGXOR$(LONGAND$(a$,b$),LONGAND$(a$,c$))
        maj$ = LONGXOR$(maj$,LONGAND$(b$,c$))
        temp2$ = LONGADD$(s0$,maj$)
        h$ = g$
        g$ = f$
        f$ = e$
        e$ = LONGADD$(d$,temp1$)
        d$ = c$
        b$ = a$
        a$ = LONGADD$(temp1$,temp2$)
    NEXT

    h$(0) = LONGADD$(h$(0),a$)
    h$(1) = LONGADD$(h$(1),b$)
    h$(2) = LONGADD$(h$(2),c$)
    h$(3) = LONGADD$(h$(3),d$)
    h$(4) = LONGADD$(h$(4),e$)
    h$(5) = LONGADD$(h$(5),f$)
    h$(6) = LONGADD$(H$(6),g$)
    h$(7) = LONGADD$(h$(7),h$)

    FOR i = 0 TO 7
        HASHPROCESS$ = HASHPROCESS$ + H$(i)
    NEXT
END FUNCTION

SUB SHATEST(FILENAME2$)
    HASHINIT
    CURRHASH$ = ""
    FOR i = 0 TO 7
        CURRHASH$ = CURRHASH$ + h$(i)
    NEXT
    OPEN FILENAME2$ FOR INPUT AS #3
    CHUNK$ = INPUT$(11,#3)
    IF LEN(CHUNK$) < 64 THEN
        CHUNK$ = PADDING$(CHUNK$)
    ENDIF
    NEWHASH$ = HASHPROCESS$(CHUNK$)
    OPEN "OUTPUT.TMP" FOR OUTPUT AS #1
    PRINT #1,TEST$;
    CLOSE #1
END SUB

SHATEST("HELLWRLD.TXT")