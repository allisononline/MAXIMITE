WLAN_TX_BUFFER$ = ""

G_SCKPIN = 34
G_MISOPIN = 33
G_MOSIPIN = 32
G_CSPIN = 31
G_VBATPIN = 26
G_IRQPIN = 24
G_IRQNUM = 0
G_SPISPEED = 0

_READ = 3
WRITE = 1

FUNCTION HI(VALUE)
	HI = (VALUE AND &HFF00) / &H100
END FUNCTION

LO(VALUE)
	LO = VALUE AND &H00FF
END FUNCTION

SPI_HEADER_SIZE = 5
HEADERS_SIZE_EVNT = SPI_HEADER_SIZE + 5
eSPI_STATE_POWERUP = 0
eSPI_STATE_INITIALIZED = 1
eSPI_STATE_IDLE = 2
eSPI_STATE_WRITE_IRQ = 3
eSPI_STATE_WRITE_FIRST_PORTION = 4
eSPI_STATE_WRITE_EOT = 5
eSPI_STATE_READ_IRQ = 6
eSPI_STATE_READ_FIRST_PORTION = 7
eSPI_STATE_READ_EOT = 8

SUB SPICONFIGSTOREOLD
	DO
	LOOP WHILE 0
END SUB

SUB SPICONFIGSTOREMY
	DO
	LOOP WHILE 0
END SUB

SUB SPICONFIGPUSH
	DO
	LOOP WHILE 0
END SUB

SUB SPICONFIGPOP
	DO
	LOOP WHILE 0
END SUB

SUB CC3000_ASSERT_CS
	PIN(G_CSPIN) = 0
	SPICONFIGPUSH
END SUB

SUB CC3000_DEASSERT_CS
	PIN(G_CSPIN) = 1
	SPICONFIGPOP
END SUB

USTXPACKETLENGTH = 0
USRXPACKETLENGTH = 0
ULPSPISTATE = 0
PTXPACKET$ = ""
PRXPACKET$ = ""

TSPIREADHEADER$ = CHR$(_READ)+CHR$(0)+CHR$(0)+CHR$(0)+CHR$(0)

CC3000_BUFFER_MAGIC_NUMBER = &HDE
SPI_BUFFER$ = SPACE$(CC3000_RX_BUFFER_SIZE)
WLAN_TX_BUFFER$ = SPACE$(CC3000_TX_BUFFER_SIZE)

CCSPI_IS_IN_IRQ = 0
CCSPI_INT_ENABLED = 0

SUB SPICLOSE
	DEBUGPRINT TAB$(4)+"CC3000: SPICLOSE"
	IF PRXPACKET$ <> "" THEN
		PRXPACKET$ = ""
	ENDIF
	WLANINTERRUPTDISABLE
END SUB

SUB SPIOPEN(PFRXHANDLER)
	DEBUGPRINT TAB(4)+"CC3000: SPIOPEN"
	ULSPISTATE = ESPI_STATE_POWERUP
	FOR i = 1 TO LEN(SPI_BUFFER$)
		POKE VAR SPI_BUFFER$,i,0
	NEXT
	FOR i TO LEN(WLAN_TX_BUFFER$)
		POKE VAR WLAN_TX_BUFFER$,i,0
	NEXT
	SPIRXHANDLER = PFRXHANDLER
	USTXPACKETLENGTH = 0
	PTXPACKET$ = ""
	PRXPACKET$ = SPI_BUFFER$
	USRXPACKETLENGTH  = 0;
	POKE VAR SPI_BUFFER$,CC3000_RX_BUFFER_SIZE-1,CC3000_BUFFER_MAGIC_NUMBER
	POKE VAR WLAN_TX_BUFFER$,CC3000_TX_BUFFER_SIZE-1,CC3000_BUFFER_MAGIC_NUMBER
	DEBUGPRINT TAB$(4)+"CC3000: Finished SPIOPEN"
	WLANINTERRUPTENABLE
END SUB

FUNCTION INIT_SPI
	DEBUGPRINT TAB$(4)+"CC3000: INIT_SPI"
	SETPIN G_VBATPIN,DOUT
	SETPIN G_CSPIN,DOUT
	SETPIN G_IRQPIN,OOUT
	SETPIN G_SCK,DOUT
	SETPIN G_MISOPIN,DIN
	SETPIN G_MOSIPIN,DOUT
	PIN(G_VBATPIN) = 0
	PAUSE 500
	PIN(G_IRQPIN) = 1
	SPICONFIGSTOREOLD
	CC3000_DEASSERT_CS
	DEBUGPRINT TAB$(4)+"CC3000: Finished INIT_SPI"
	INIT_SPI = ESUCCESS
END FUNCTION

FUNCTION SPIFIRSTWRITE(UCBUF$,USLENGTH)
	DEBUGPRINT TAB$(4)+"CC3000: SPIFIRSTWRITE"
	CC3000_ASSERT_CS
	PAUSE(1)
	SPIWRITEDATASYNCHRONOUS(UCBUF$,4)
	PAUSE(1)
	SPIWRITEDATASYNCHRONOUS(RIGHT$(UCBUF$,LEN(UCBUF$-4)),USLENGTH-4)
	ULSPISTATE = ESPI_STATE_IDLE
	CC3000_DEASSERT_CS
	SPIFIRSTWRITE = 0
END FUNCTION

SUB SPIWRITE(PUSERBUFFER$,USLENGTH)
	UCPAD = 0
	DEBUGPRINT TAB$(4)+"CC3000: SPIWRITE"
	IF USLENGTH AND &H0001 = 0 THEN
		UCPAD = UCPAD + 1
	ENDIF
	POKE VAR PUSERWRITEBUFFER$,1,WRITE
	POKE VAR PUSERWRITEBUFFER$,2,HI(USLENGTH+UCPAD)
	POKE VAR PUSERWRITEBUFFER$,3,LO(USLENGTH+UCPAD)
	POKE VAR PUSERWRITEBUFFER$,4,0
	POKE VAR PUSERWRITEBUFFER$,5,0
	USLENGTH = USLENGTH + (SPI_HEADER_SIZE+UCPAD)
	IF PEEK(VAR WLAN_TX_BUFFER$,CC3000_TX_BUFFER_SIZE-1) <> CC3000_BUFFER_MAGIC_NUMBER THEN
		DEBUGPRINT TAB$(4)+"CC3000: Error - No magic number found in SPIWRITE"
		DO
		LOOP
	ENDIF
	IF ULSPISTATE = ESPI_STATE_POWERUP THEN
		DO WHILE ULSPISTATE <> ESPI_STATE_INITIALIZED
		LOOP
	ENDIF
	IF ULSPISTATE = ESPI_STATE_INITIALIZED THEN
		SPIFIRSTWRITE(PUSERBUFFER$,USLENGTH)
	ELSE
		TSLIINFORMATION.WLANINTERRUPTDISABLE
		DO WHILE ULSPISTATE <> ESPI_STATE_IDLE
		LOOP
		ULSPISTATE = ESPI_STATE_WRITE_IRQ
		PTXPACKET$ = PUSERBUFFER$
		USTXPACKETLENGTH = USLENGTH
		CC3000_ASSERT_CS
		WLANINTERRUPTENABLE
		IF READWLANINTERRUPTPIN = 0 THEN
			SPIWRITEDATASYNCHRONOUS(PTXPACKET$,USTXPACKETLENGTH)
			ULSPISTATE = ESPI_STATE_IDLE
			CC3000_DEASSERT_CS
		ENDIF
	ENDIF
	DO WHILE ESPI_STATE_IDLE <> ULSPISTATE
	LOOP
	SPIWRITE = 0
END FUNCTION

SUB SPIWRITEDATASYNCHRONOUS(_DATA$,SIZE)
	DEBUGPRINT TAB$(4)+"CC3000: SPIWRITEDATASYNCHRONOUS Start"
	FOR _LOC = 1 TO SIZE
		JUNK = SPI(G_MISOPIN,G_MOSIPIN,G_CLKPIN,PEEK(VAR _DATA$,_LOC),H,1,8)
		IF DEBUG_MODE = 1 THEN
			DEBUGPRINT " ";
			DEBUGPRINT HEX$(PEEK(VAR _DATA$,_LOC))
		ENDIF
	NEXT
	DEBUGPRINT TAB$(4)+"CC3000: SPIWRITEDATASYNCHRONOUS End"
END SUB

FUNCTION SPIREADDATASYNCHRONOUS$(,SIZE)
	_DATA$ = SPACE$(SIZE)
	DEBUGPRINT TAB$(4)+"CC3000: SPIREADDATASYNCHRONOUS"
	FOR i = 1 TO SIZE
		POKE VAR _DATA$,i,SPI(G_MISOPIN,G_MOSIPIN,G_CLKPIN,&H03,H,1,8)
		DEBUGPRINT " ";
		DEBUGPRINT PEEK(VAR _DATA$,i)
	NEXT
	SPIREADDATASYNCHRONOUS$ = _DATA$
END FUNCTION

SUB SPIREADHEADER
	DEBUGPRINT TAB$(4)+"CC3000: SPIREADHEADER"
	PRXPACKET = SPIREADDEATASYNCHRONOUS(HEADER_SIZE_EVNT)
END SUB

FUNCTION SPIREADDATACONT
	DATA_TO_RECV = 0
	TYPE$ = CHR$(0)
	EVENT_BUFF$ = ""
	DEBUGPRINT TAB$(4)+"CC3000: SPIREADDATACONT"
	EVENT_BUFF$ = PRXPACKET$
	DATA_TO_DECV = 0
	TYPE$ = CHR$(PEEK(VAR EVENT_BUFF$,1+SPI_HEADER_SIZE+HCI_PACKET_TYPE_OFFSET))
	IF ASC(TYPE$) = HCI_TYPE_DATA THEN
		

